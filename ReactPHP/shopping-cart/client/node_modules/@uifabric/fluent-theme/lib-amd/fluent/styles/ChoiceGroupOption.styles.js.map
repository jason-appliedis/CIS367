{"version":3,"file":"ChoiceGroupOption.styles.js","sourceRoot":"../src/","sources":["fluent/styles/ChoiceGroupOption.styles.ts"],"names":[],"mappings":";;;IAEa,QAAA,uBAAuB,GAAG,UAAC,KAAmC;QACjE,IAAA,uBAAO,EAAE,yBAAQ,EAAE,mBAAK,EAAE,uBAAO,EAAE,yBAAQ,CAAW;QACtD,IAAA,qCAAc,EAAE,uBAAO,CAAW;QAC1C,OAAO;YACL,KAAK,EAAE;gBACL;oBACE,SAAS,EAAE;wBACT,aAAa;wBACb,SAAS,EAAE;4BACT;gCACE,WAAW,EAAE,OAAO,CAAC,cAAc;6BACpC;4BACD,QAAQ,IAAI;gCACV,6EAA6E;gCAC7E,eAAe,EAAE,cAAc,CAAC,cAAc;gCAC9C,WAAW,EAAE,OAAO,CAAC,kBAAkB;6BACxC;4BACD,OAAO;gCACL,CAAC,QAAQ,IAAI;gCACX,sDAAsD;gCACtD,WAAW,EAAE,cAAc,CAAC,sBAAsB;6BACnD;4BACH,CAAC,OAAO,IAAI,QAAQ,CAAC;gCACnB,QAAQ;gCACR,OAAO,IAAI;gCACT,OAAO,EAAE,CAAC;6BACX;yBACJ;wBACD,UAAU;wBACV,QAAQ,EAAE;4BACR,OAAO;gCACL,QAAQ,IAAI;gCACV,WAAW,EAAE,OAAO,CAAC,kBAAkB;6BACxC;yBACJ;wBACD,QAAQ,EAAE;4BACR,CAAC,QAAQ,IAAI;gCACX,SAAS,EAAE;oCACT,sBAAsB,EAAE;wCACtB,KAAK,EAAE,OAAO,CAAC,WAAW;qCAC3B;oCACD,SAAS,EAAE;wCACT,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc;qCAClE;oCACD,QAAQ,EAAE;wCACR,CAAC,OAAO;4CACN,CAAC,QAAQ;4CACT,CAAC,OAAO,IAAI;4CACV,OAAO,EAAE,IAAI;4CACb,kBAAkB,EAAE,kBAAkB;4CACtC,IAAI,EAAE,CAAC;4CACP,GAAG,EAAE,CAAC;4CACN,KAAK,EAAE,EAAE;4CACT,MAAM,EAAE,EAAE;4CACV,eAAe,EAAE,OAAO,CAAC,gBAAgB;yCAC1C;wCACH,OAAO,IAAI;4CACT,WAAW,EAAE,OAAO,CAAC,SAAS;yCAC/B;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;gBACD,CAAC,OAAO,IAAI,QAAQ,CAAC;oBACnB,CAAC,QAAQ,IAAI;oBACX,SAAS,EAAE;wBACT,QAAQ,EAAE;4BACR,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc;yBAClE;qBACF;iBACF;gBACH,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI;oBACvB,WAAW,EAAE,CAAC;iBACf;gBACD,QAAQ,IAAI;oBACV,SAAS,EAAE;wBACT,sBAAsB,EAAE;4BACtB,KAAK,EAAE,OAAO,CAAC,eAAe;yBAC/B;qBACF;iBACF;gBACD,OAAO;oBACL,QAAQ,IAAI;oBACV,WAAW,EAAE,OAAO,CAAC,cAAc;iBACpC;aACJ;YACD,kBAAkB,EAAE;gBAClB,SAAS,EAAE;oBACT,cAAc,EAAE;wBACd,SAAS,EAAE;4BACT,QAAQ,EAAE;gCACR,WAAW,EAAE,OAAO,CAAC,gBAAgB;6BACtC;yBACF;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from 'office-ui-fabric-react/lib/ChoiceGroup';\n\nexport const ChoiceGroupOptionStyles = (props: IChoiceGroupOptionStyleProps): Partial<IChoiceGroupOptionStyles> => {\n  const { checked, disabled, theme, hasIcon, hasImage } = props;\n  const { semanticColors, palette } = theme;\n  return {\n    field: [\n      {\n        selectors: {\n          // The circle\n          ':before': [\n            {\n              borderColor: palette.neutralPrimary,\n            },\n            disabled && {\n              // using semanticColor to override unnecessary ternary check at source styles\n              backgroundColor: semanticColors.bodyBackground,\n              borderColor: palette.neutralTertiaryAlt,\n            },\n            checked &&\n              !disabled && {\n                // re-assign the semanticColor after changing it above\n                borderColor: semanticColors.inputBackgroundChecked,\n              },\n            (hasIcon || hasImage) &&\n              disabled &&\n              checked && {\n                opacity: 1,\n              },\n          ],\n          // The dot\n          ':after': [\n            checked &&\n              disabled && {\n                borderColor: palette.neutralTertiaryAlt,\n              },\n          ],\n          ':hover': [\n            !disabled && {\n              selectors: {\n                '.ms-ChoiceFieldLabel': {\n                  color: palette.neutralDark,\n                },\n                ':before': {\n                  borderColor: checked ? palette.themeDark : palette.neutralPrimary,\n                },\n                ':after': [\n                  !hasIcon &&\n                    !hasImage &&\n                    !checked && {\n                      content: '\"\"',\n                      transitionProperty: 'background-color',\n                      left: 5,\n                      top: 5,\n                      width: 10,\n                      height: 10,\n                      backgroundColor: palette.neutralSecondary,\n                    },\n                  checked && {\n                    borderColor: palette.themeDark,\n                  },\n                ],\n              },\n            },\n          ],\n        },\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderColor: checked ? palette.themeDark : palette.neutralPrimary,\n            },\n          },\n        },\n      (hasIcon || hasImage) && {\n        borderWidth: 1,\n      },\n      disabled && {\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            color: palette.neutralTertiary,\n          },\n        },\n      },\n      checked &&\n        disabled && {\n          borderColor: palette.neutralLighter,\n        },\n    ],\n    choiceFieldWrapper: {\n      selectors: {\n        '&.is-inFocus': {\n          selectors: {\n            ':after': {\n              borderColor: palette.neutralSecondary,\n            },\n          },\n        },\n      },\n    },\n  };\n};\n"]}