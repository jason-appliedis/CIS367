define(["require", "exports", "tslib", "office-ui-fabric-react/lib/Utilities", "./styleConstants", "../FluentType"], function (require, exports, tslib_1, Utilities_1, styleConstants_1, FluentType_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ContextualMenuStyles = function (props) {
        var _a, _b;
        var theme = props.theme;
        var palette = theme.palette, effects = theme.effects;
        var CONTEXTUAL_MENU_ITEM_HEIGHT = 36;
        var iconStyles = {
            maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,
            fontSize: FluentType_1.FontSizes.size16,
            width: FluentType_1.FontSizes.size16,
            selectors: (_a = {},
                _a[styleConstants_1.MinimumScreenSelector] = {
                    fontSize: FluentType_1.FontSizes.size20,
                    width: FluentType_1.FontSizes.size20,
                },
                _a),
        };
        return {
            subComponentStyles: {
                callout: {
                    root: {
                        border: 'none',
                        borderRadius: effects.roundedCorner2,
                        boxShadow: effects.elevation8,
                        selectors: (_b = {},
                            _b['.ms-Callout-main'] = { borderRadius: effects.roundedCorner2 },
                            _b),
                    },
                    beakCurtain: { borderRadius: effects.roundedCorner2 },
                },
                menuItem: function (itemStyleProps) {
                    var _a, _b, _c;
                    var disabled = itemStyleProps.disabled, expanded = itemStyleProps.expanded, primaryDisabled = itemStyleProps.primaryDisabled, checked = itemStyleProps.checked;
                    return {
                        root: [
                            {
                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,
                                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,
                            },
                            !disabled &&
                                !expanded && {
                                selectors: (_a = {
                                        ':hover': {
                                            color: palette.neutralDark,
                                            selectors: {
                                                '.ms-ContextualMenu-icon': {
                                                    color: palette.themeDarkAlt,
                                                },
                                                '.ms-ContextualMenu-submenuIcon': {
                                                    color: palette.neutralPrimary,
                                                },
                                            },
                                        },
                                        ':active': {
                                            selectors: {
                                                '.ms-ContextualMenu-icon': {
                                                    color: palette.themeDark,
                                                },
                                                '.ms-ContextualMenu-submenuIcon': {
                                                    color: palette.neutralPrimary,
                                                },
                                            },
                                        }
                                    },
                                    _a["." + Utilities_1.IsFocusVisibleClassName + " &:focus, ." + Utilities_1.IsFocusVisibleClassName + " &:focus:hover"] = {
                                        backgroundColor: palette.white,
                                    },
                                    _a),
                            },
                            disabled && {
                                color: palette.neutralTertiary,
                            },
                        ],
                        splitPrimary: [
                            {
                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,
                                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,
                            },
                            !(disabled || primaryDisabled) &&
                                !checked && {
                                selectors: {
                                    ':hover': {
                                        color: palette.neutralDark,
                                        selectors: {
                                            '.ms-ContextualMenu-icon': {
                                                color: palette.themeDarkAlt,
                                            },
                                        },
                                    },
                                    ':active': {
                                        selectors: {
                                            '.ms-ContextualMenu-icon': {
                                                color: palette.themeDark,
                                            },
                                        },
                                    },
                                },
                            },
                            (disabled || primaryDisabled) && {
                                color: palette.neutralTertiary,
                                selectors: {
                                    '.ms-ContextualMenu-icon': {
                                        color: palette.neutralTertiary,
                                    },
                                },
                            },
                            checked && {
                                selectors: {
                                    '.ms-ContextualMenu-checkmarkIcon': {
                                        color: palette.neutralPrimary,
                                    },
                                },
                            },
                        ],
                        splitMenu: [
                            {
                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,
                                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,
                                width: CONTEXTUAL_MENU_ITEM_HEIGHT,
                            },
                        ],
                        icon: [tslib_1.__assign({}, iconStyles), disabled && { color: palette.neutralTertiary }],
                        checkmarkIcon: [tslib_1.__assign({}, iconStyles)],
                        splitContainer: {
                            height: CONTEXTUAL_MENU_ITEM_HEIGHT,
                            selectors: (_b = {},
                                _b["." + Utilities_1.IsFocusVisibleClassName + " &:focus, ." + Utilities_1.IsFocusVisibleClassName + " &:focus:hover"] = {
                                    backgroundColor: palette.white,
                                },
                                _b),
                        },
                        subMenuIcon: [
                            {
                                height: CONTEXTUAL_MENU_ITEM_HEIGHT,
                                lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,
                                color: palette.neutralSecondary,
                                fontSize: FluentType_1.FontSizes.size12,
                                selectors: (_c = {
                                        ':hover': {
                                            color: palette.neutralPrimary,
                                        },
                                        ':active': {
                                            color: palette.neutralPrimary,
                                        }
                                    },
                                    _c[styleConstants_1.MinimumScreenSelector] = { fontSize: FluentType_1.FontSizes.size16 },
                                    _c),
                            },
                            expanded && { color: palette.neutralPrimary },
                            disabled && { color: palette.neutralTertiary },
                        ],
                    };
                },
            },
        };
    };
});
//# sourceMappingURL=ContextualMenu.styles.js.map