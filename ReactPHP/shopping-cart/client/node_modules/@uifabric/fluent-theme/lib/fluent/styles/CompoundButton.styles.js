import { __assign } from "tslib";
import { getFocusStyle, HighContrastSelector } from 'office-ui-fabric-react/lib/Styling';
export var CompoundButtonStyles = function (props) {
    var _a, _b, _c;
    var theme = props.theme;
    if (!theme) {
        throw new Error('Theme is undefined or null.');
    }
    var palette = theme.palette, effects = theme.effects;
    return {
        root: __assign(__assign({}, getFocusStyle(theme, { inset: 2 })), { backgroundColor: palette.white, border: "1px solid " + palette.neutralSecondaryAlt, borderRadius: effects.roundedCorner2, padding: '16px 12px', 
            // Primary styles require targeting a selector for now.
            // @todo: These selectors override the focus style above. Need to fix this.
            selectors: {
                '&.ms-Button--compoundPrimary': {
                    backgroundColor: palette.themePrimary,
                    border: 'none',
                    selectors: (_a = {},
                        _a[HighContrastSelector] = {
                            color: 'Window',
                            backgroundColor: 'WindowText',
                            MsHighContrastAdjust: 'none',
                        },
                        _a),
                },
            } }),
        rootPressed: {
            backgroundColor: palette.neutralQuaternaryAlt,
            // Primary styles require targeting a selector for now.
            selectors: {
                '&.ms-Button--compoundPrimary:active': {
                    backgroundColor: palette.themeDark,
                    selectors: (_b = {},
                        _b[HighContrastSelector] = {
                            color: 'Window',
                            backgroundColor: 'WindowText',
                            MsHighContrastAdjust: 'none',
                        },
                        _b),
                },
            },
        },
        rootChecked: {
            backgroundColor: palette.neutralQuaternaryAlt,
            // Primary styles require targeting a selector for now.
            selectors: {
                '&.ms-Button--compoundPrimary': {
                    backgroundColor: palette.themeDark,
                    borderColor: palette.themeDark,
                    selectors: (_c = {},
                        _c[HighContrastSelector] = {
                            color: 'Window',
                            backgroundColor: 'WindowText',
                            MsHighContrastAdjust: 'none',
                        },
                        _c),
                },
            },
        },
        rootDisabled: {
            borderColor: palette.neutralLighter,
            selectors: {
                '&.ms-Button--compoundPrimary': {
                    backgroundColor: palette.neutralLighter,
                    borderColor: palette.neutralLighter,
                },
            },
        },
    };
};
//# sourceMappingURL=CompoundButton.styles.js.map