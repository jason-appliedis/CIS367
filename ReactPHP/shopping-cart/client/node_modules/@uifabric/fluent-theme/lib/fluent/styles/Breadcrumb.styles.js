import { __assign } from "tslib";
import { FontWeights } from 'office-ui-fabric-react/lib/Styling';
import { FontSizes } from '../FluentType';
import { MediumScreenSelector, MinimumScreenSelector } from './styleConstants';
export var BreadcrumbStyles = function (props) {
    var _a;
    var theme = props.theme;
    var palette = theme.palette;
    var stateSelectors = {
        ':hover': {
            color: palette.neutralPrimary,
            textDecoration: 'none',
        },
        ':active': {
            backgroundColor: palette.neutralLight,
            textDecoration: 'none',
        },
        // Needs to be revised with designers when moving to default OUFR styles.
        // Now used only to override the default ones to follow fluent specs.
        '&:active:hover': {
            color: palette.neutralPrimary,
            backgroundColor: palette.neutralLight,
            textDecoration: 'none',
        },
    };
    var itemStyle = {
        lineHeight: 36,
        fontSize: FontSizes.size18,
        outline: 'none',
        fontWeight: FontWeights.regular,
        color: palette.neutralSecondary,
        selectors: __assign((_a = { '.ms-Fabric--isFocusVisible &:focus': {
                    // Necessary due to changes of Link component not using getFocusStyle.
                    outline: 'none',
                } }, _a[MediumScreenSelector] = { fontSize: FontSizes.size18, fontWeight: FontWeights.regular, lineHeight: 36 }, _a[MinimumScreenSelector] = { fontSize: FontSizes.size18, lineHeight: 36 }, _a), stateSelectors),
    };
    var lastChildItem = {
        fontWeight: FontWeights.semibold,
        color: palette.neutralPrimary,
    };
    return {
        root: {
            marginTop: 11,
        },
        itemLink: itemStyle,
        item: itemStyle,
        listItem: {
            selectors: {
                '&:last-child .ms-Breadcrumb-itemLink': lastChildItem,
                '&:last-child .ms-Breadcrumb-item': lastChildItem,
            },
        },
        overflowButton: {
            color: palette.neutralSecondary,
            selectors: __assign({}, stateSelectors),
        },
    };
};
//# sourceMappingURL=Breadcrumb.styles.js.map