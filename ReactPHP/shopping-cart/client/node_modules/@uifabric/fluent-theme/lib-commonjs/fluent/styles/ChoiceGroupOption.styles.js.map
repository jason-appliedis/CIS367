{"version":3,"file":"ChoiceGroupOption.styles.js","sourceRoot":"../src/","sources":["fluent/styles/ChoiceGroupOption.styles.ts"],"names":[],"mappings":";;AAEa,QAAA,uBAAuB,GAAG,UAAC,KAAmC;IACjE,IAAA,uBAAO,EAAE,yBAAQ,EAAE,mBAAK,EAAE,uBAAO,EAAE,yBAAQ,CAAW;IACtD,IAAA,qCAAc,EAAE,uBAAO,CAAW;IAC1C,OAAO;QACL,KAAK,EAAE;YACL;gBACE,SAAS,EAAE;oBACT,aAAa;oBACb,SAAS,EAAE;wBACT;4BACE,WAAW,EAAE,OAAO,CAAC,cAAc;yBACpC;wBACD,QAAQ,IAAI;4BACV,6EAA6E;4BAC7E,eAAe,EAAE,cAAc,CAAC,cAAc;4BAC9C,WAAW,EAAE,OAAO,CAAC,kBAAkB;yBACxC;wBACD,OAAO;4BACL,CAAC,QAAQ,IAAI;4BACX,sDAAsD;4BACtD,WAAW,EAAE,cAAc,CAAC,sBAAsB;yBACnD;wBACH,CAAC,OAAO,IAAI,QAAQ,CAAC;4BACnB,QAAQ;4BACR,OAAO,IAAI;4BACT,OAAO,EAAE,CAAC;yBACX;qBACJ;oBACD,UAAU;oBACV,QAAQ,EAAE;wBACR,OAAO;4BACL,QAAQ,IAAI;4BACV,WAAW,EAAE,OAAO,CAAC,kBAAkB;yBACxC;qBACJ;oBACD,QAAQ,EAAE;wBACR,CAAC,QAAQ,IAAI;4BACX,SAAS,EAAE;gCACT,sBAAsB,EAAE;oCACtB,KAAK,EAAE,OAAO,CAAC,WAAW;iCAC3B;gCACD,SAAS,EAAE;oCACT,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc;iCAClE;gCACD,QAAQ,EAAE;oCACR,CAAC,OAAO;wCACN,CAAC,QAAQ;wCACT,CAAC,OAAO,IAAI;wCACV,OAAO,EAAE,IAAI;wCACb,kBAAkB,EAAE,kBAAkB;wCACtC,IAAI,EAAE,CAAC;wCACP,GAAG,EAAE,CAAC;wCACN,KAAK,EAAE,EAAE;wCACT,MAAM,EAAE,EAAE;wCACV,eAAe,EAAE,OAAO,CAAC,gBAAgB;qCAC1C;oCACH,OAAO,IAAI;wCACT,WAAW,EAAE,OAAO,CAAC,SAAS;qCAC/B;iCACF;6BACF;yBACF;qBACF;iBACF;aACF;YACD,CAAC,OAAO,IAAI,QAAQ,CAAC;gBACnB,CAAC,QAAQ,IAAI;gBACX,SAAS,EAAE;oBACT,QAAQ,EAAE;wBACR,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc;qBAClE;iBACF;aACF;YACH,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI;gBACvB,WAAW,EAAE,CAAC;aACf;YACD,QAAQ,IAAI;gBACV,SAAS,EAAE;oBACT,sBAAsB,EAAE;wBACtB,KAAK,EAAE,OAAO,CAAC,eAAe;qBAC/B;iBACF;aACF;YACD,OAAO;gBACL,QAAQ,IAAI;gBACV,WAAW,EAAE,OAAO,CAAC,cAAc;aACpC;SACJ;QACD,kBAAkB,EAAE;YAClB,SAAS,EAAE;gBACT,cAAc,EAAE;oBACd,SAAS,EAAE;wBACT,QAAQ,EAAE;4BACR,WAAW,EAAE,OAAO,CAAC,gBAAgB;yBACtC;qBACF;iBACF;aACF;SACF;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from 'office-ui-fabric-react/lib/ChoiceGroup';\n\nexport const ChoiceGroupOptionStyles = (props: IChoiceGroupOptionStyleProps): Partial<IChoiceGroupOptionStyles> => {\n  const { checked, disabled, theme, hasIcon, hasImage } = props;\n  const { semanticColors, palette } = theme;\n  return {\n    field: [\n      {\n        selectors: {\n          // The circle\n          ':before': [\n            {\n              borderColor: palette.neutralPrimary,\n            },\n            disabled && {\n              // using semanticColor to override unnecessary ternary check at source styles\n              backgroundColor: semanticColors.bodyBackground,\n              borderColor: palette.neutralTertiaryAlt,\n            },\n            checked &&\n              !disabled && {\n                // re-assign the semanticColor after changing it above\n                borderColor: semanticColors.inputBackgroundChecked,\n              },\n            (hasIcon || hasImage) &&\n              disabled &&\n              checked && {\n                opacity: 1,\n              },\n          ],\n          // The dot\n          ':after': [\n            checked &&\n              disabled && {\n                borderColor: palette.neutralTertiaryAlt,\n              },\n          ],\n          ':hover': [\n            !disabled && {\n              selectors: {\n                '.ms-ChoiceFieldLabel': {\n                  color: palette.neutralDark,\n                },\n                ':before': {\n                  borderColor: checked ? palette.themeDark : palette.neutralPrimary,\n                },\n                ':after': [\n                  !hasIcon &&\n                    !hasImage &&\n                    !checked && {\n                      content: '\"\"',\n                      transitionProperty: 'background-color',\n                      left: 5,\n                      top: 5,\n                      width: 10,\n                      height: 10,\n                      backgroundColor: palette.neutralSecondary,\n                    },\n                  checked && {\n                    borderColor: palette.themeDark,\n                  },\n                ],\n              },\n            },\n          ],\n        },\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderColor: checked ? palette.themeDark : palette.neutralPrimary,\n            },\n          },\n        },\n      (hasIcon || hasImage) && {\n        borderWidth: 1,\n      },\n      disabled && {\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            color: palette.neutralTertiary,\n          },\n        },\n      },\n      checked &&\n        disabled && {\n          borderColor: palette.neutralLighter,\n        },\n    ],\n    choiceFieldWrapper: {\n      selectors: {\n        '&.is-inFocus': {\n          selectors: {\n            ':after': {\n              borderColor: palette.neutralSecondary,\n            },\n          },\n        },\n      },\n    },\n  };\n};\n"]}