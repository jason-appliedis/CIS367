{"version":3,"file":"Checkbox.styles.js","sourceRoot":"../src/","sources":["fluent/styles/Checkbox.styles.ts"],"names":[],"mappings":";;AAEa,QAAA,cAAc,GAAG,UAAC,KAA0B;IAC/C,IAAA,yBAAQ,EAAE,uBAAO,EAAE,mBAAK,CAAW;IACnC,IAAA,qCAAc,EAAE,uBAAO,EAAE,uBAAO,CAAW;IAEnD,OAAO;QACL,QAAQ,EAAE;YACR;gBACE,YAAY,EAAE,OAAO,CAAC,cAAc;gBACpC,WAAW,EAAE,OAAO,CAAC,cAAc;aACpC;YACD,CAAC,QAAQ;gBACP,OAAO,IAAI;gBACT,2DAA2D;gBAC3D,WAAW,EAAE,cAAc,CAAC,sBAAsB;aACnD;YACH,QAAQ,IAAI;gBACV,WAAW,EAAE,OAAO,CAAC,kBAAkB;aACxC;YACD,OAAO;gBACL,QAAQ,IAAI;gBACV,UAAU,EAAE,OAAO,CAAC,kBAAkB;gBACtC,WAAW,EAAE,OAAO,CAAC,kBAAkB;aACxC;SACJ;QACD,SAAS,EAAE;YACT,wEAAwE;YACxE,KAAK,EAAE,cAAc,CAAC,sBAAsB;SAC7C;QACD,IAAI,EAAE;YACJ,CAAC,QAAQ,IAAI;gBACX,CAAC,OAAO,IAAI;oBACV,SAAS,EAAE;wBACT,0BAA0B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,WAAW,EAAE;wBAC1D,+BAA+B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,gBAAgB,EAAE;qBACrE;iBACF;gBACD,OAAO,IAAI;oBACT,SAAS,EAAE;wBACT,8BAA8B,EAAE;4BAC9B,UAAU,EAAE,OAAO,CAAC,SAAS;4BAC7B,WAAW,EAAE,OAAO,CAAC,SAAS;yBAC/B;wBACD,8BAA8B,EAAE;4BAC9B,UAAU,EAAE,OAAO,CAAC,SAAS;4BAC7B,WAAW,EAAE,OAAO,CAAC,SAAS;yBAC/B;qBACF;iBACF;aACF;SACF;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { ICheckboxStyleProps, ICheckboxStyles } from 'office-ui-fabric-react/lib/Checkbox';\n\nexport const CheckboxStyles = (props: ICheckboxStyleProps): Partial<ICheckboxStyles> => {\n  const { disabled, checked, theme } = props;\n  const { semanticColors, palette, effects } = theme;\n\n  return {\n    checkbox: [\n      {\n        borderRadius: effects.roundedCorner2,\n        borderColor: palette.neutralPrimary,\n      },\n      !disabled &&\n        checked && {\n          // using semanticColor because of setting a new color above\n          borderColor: semanticColors.inputBackgroundChecked,\n        },\n      disabled && {\n        borderColor: palette.neutralTertiaryAlt,\n      },\n      checked &&\n        disabled && {\n          background: palette.neutralTertiaryAlt,\n          borderColor: palette.neutralTertiaryAlt,\n        },\n    ],\n    checkmark: {\n      // using semanticColor to override original behavior on checked/disabled\n      color: semanticColors.inputForegroundChecked,\n    },\n    root: [\n      !disabled && [\n        !checked && {\n          selectors: {\n            ':hover .ms-Checkbox-text': { color: palette.neutralDark },\n            ':hover .ms-Checkbox-checkmark': { color: palette.neutralSecondary },\n          },\n        },\n        checked && {\n          selectors: {\n            ':hover .ms-Checkbox-checkbox': {\n              background: palette.themeDark,\n              borderColor: palette.themeDark,\n            },\n            ':focus .ms-Checkbox-checkbox': {\n              background: palette.themeDark,\n              borderColor: palette.themeDark,\n            },\n          },\n        },\n      ],\n    ],\n  };\n};\n"]}