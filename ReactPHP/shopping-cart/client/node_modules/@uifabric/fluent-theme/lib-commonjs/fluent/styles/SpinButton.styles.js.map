{"version":3,"file":"SpinButton.styles.js","sourceRoot":"../src/","sources":["fluent/styles/SpinButton.styles.ts"],"names":[],"mappings":";;;AAEa,QAAA,gBAAgB,GAAG,UAAC,KAAuB;IACtD,IAAM,iBAAiB,GAAG,EAAE,CAAC;IACrB,IAAA,mBAAK,CAAW;IACxB,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAChD;IACO,IAAA,uBAAO,EAAE,uBAAO,CAAW;IAEnC,IAAM,YAAY,GAAG;QACnB,KAAK,EAAE,OAAO,CAAC,gBAAgB;QAC/B,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE;YACT,QAAQ,EAAE;gBACR,eAAe,EAAE,OAAO,CAAC,cAAc;gBACvC,KAAK,EAAE,OAAO,CAAC,gBAAgB;aAChC;YACD,SAAS,EAAE;gBACT,eAAe,EAAE,OAAO,CAAC,YAAY;gBACrC,KAAK,EAAE,OAAO,CAAC,gBAAgB;aAChC;YACD,iBAAiB,EAAE;gBACjB,QAAQ,EAAE,CAAC;aACZ;SACF;KACF,CAAC;IAEF,OAAO;QACL,iBAAiB,EAAE;YACjB,YAAY,EAAE,OAAO,CAAC,cAAc;YACpC,WAAW,EAAE,OAAO,CAAC,mBAAmB;SACzC;QACD,KAAK,EAAE;YACL,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,iBAAe,iBAAiB,QAAK;YAC5C,YAAY,EAAK,OAAO,CAAC,cAAc,aAAQ,OAAO,CAAC,cAAgB;SACxE;QACD,qBAAqB,EAAE;YACrB,SAAS,EAAE;gBACT,yEAAyE;gBACzE,gBAAgB,wCACX,YAAY,KACf,YAAY,EAAE,SAAO,OAAO,CAAC,cAAc,OAAI,GAChD;gBACD,cAAc,wCACT,YAAY,KACf,YAAY,EAAE,OAAK,OAAO,CAAC,cAAc,SAAM,GAChD;aACF;SACF;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { ISpinButtonStyles, ISpinButtonProps } from 'office-ui-fabric-react/lib/SpinButton';\n\nexport const SpinButtonStyles = (props: ISpinButtonProps): Partial<ISpinButtonStyles> => {\n  const SPIN_BUTTON_WIDTH = 23;\n  const { theme } = props;\n  if (!theme) {\n    throw new Error('Theme is undefined or null.');\n  }\n  const { palette, effects } = theme;\n\n  const buttonStyles = {\n    color: palette.neutralSecondary,\n    width: SPIN_BUTTON_WIDTH,\n    selectors: {\n      ':hover': {\n        backgroundColor: palette.neutralLighter,\n        color: palette.neutralSecondary,\n      },\n      ':active': {\n        backgroundColor: palette.neutralLight,\n        color: palette.neutralSecondary,\n      },\n      '.ms-Button-icon': {\n        fontSize: 8, // following the redlines even though we don't have this size in our type ramp.\n      },\n    },\n  };\n\n  return {\n    spinButtonWrapper: {\n      borderRadius: effects.roundedCorner2,\n      borderColor: palette.neutralSecondaryAlt,\n    },\n    input: {\n      padding: '0 8px',\n      width: `calc(100% - ${SPIN_BUTTON_WIDTH}px)`, // -23px because buttons width changed\n      borderRadius: `${effects.roundedCorner2} 0 0 ${effects.roundedCorner2}`,\n    },\n    arrowButtonsContainer: {\n      selectors: {\n        // No direct style section available so need to target a global className\n        '.ms-DownButton': {\n          ...buttonStyles,\n          borderRadius: `0 0 ${effects.roundedCorner2} 0`,\n        },\n        '.ms-UpButton': {\n          ...buttonStyles,\n          borderRadius: `0 ${effects.roundedCorner2} 0 0`,\n        },\n      },\n    },\n  };\n};\n"]}